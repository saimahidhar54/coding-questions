Problem statement
Given a graph with N vertices (numbered from 0 to N-1) and M undirected edges, then count the distinct 3-cycles in the graph. A 3-cycle PQR is a cycle in which (P,Q), (Q,R) and (R,P) are connected by an edge.

Detailed explanation ( Input/output format, Notes, Images )
Constraints :
0 <= N <= 100
0 <= M <= (N*(N-1))/2
0 <= u <= N - 1
0 <= v <= N - 1
Time Limit: 1 sec
Sample Input 1:
3 3
0 1
1 2
2 0
Sample Output 1:
1



#include <iostream>
using namespace std;
//bool cycle(int i,int j,int f)
int main() {
    // Write your code here
    int v,e,j,k;
    cin >> v>>e;
    int arr[100][100];
    for(int i=0;i<e;i++)
    {
        cin >> j>>k;
        arr[j][k]=1;
        arr[k][j]=1;
    }
    int count=0;
    for(int i=0;i<v;i++)
    {
        for(int j=i+1;j<v;j++)
        {
            for(int f=j+1;f<v;f++)
            {
                if(arr[i][j]==1 && arr[j][f]==1 && arr[i][f]==1)
                {
                    count++;
                }
            }
        }
    }
    cout << count;
}
