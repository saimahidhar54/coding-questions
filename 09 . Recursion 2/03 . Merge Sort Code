Merge Sort Code
Send Feedback
Given the starting 'l' and the ending 'r' positions of the array 'ARR', your task is sorting the elements between 'l' and 'r'.
Note:
Change in the input array itself. So no need to return or print anything.
Example:
Input: ‘N’ = 7,
'ARR' = [2, 13, 4, 1, 3, 6, 28]

Output: [1 2 3 4 6 13 28]

Explanation: After applying 'merge sort' on the input array, the output is [1 2 3 4 6 13 28].
Input format :
The first line contains an integer 'N' representing the size of the array/list.

The second line contains 'N' single space-separated integers representing the elements in the array/list.
Output format :
You don't need to return anything. In the output, you will see the array after modification is done by you.
Constraints :
1 <= N <= 10^3
0 <= ARR[i] <= 10^9
Sample Input 1:
7
2 13 4 1 3 6 28
Sample Output 1:
1 2 3 4 6 13 28
Explanation of Sample Output 1:
After applying 'merge sort' on the input array, the output is [1 2 3 4 6 13 28].
Sample Input 2:
5
9 3 6 2 0
Sample Output 2:
0 2 3 6 9
Explanation of Sample Output 2:
After applying 'merge sort' on the input array, the output is [0 2 3 6 9].


void merge(int input[],int si,int ei,int a[],int size)
{
    if(si>=ei)
    {
        return;
    }
    int mid=(si+ei)/2;
    merge(input,si,mid,a,size);
    merge(input,mid+1,ei,a,size);
    int i=si,j=mid+1;
    for(int z=si;z<(ei+1);)
    {
        if(i==(mid+1))
        {
            while(j!=(ei+1))
            {
                a[z]=input[j];
                j++;
                z++;
            }
            break;
        }
        if(j==(ei+1))
        {
            while(i!=(mid+1))
            {
                a[z]=input[i];
                i++;
                z++;
            }
            break;
        }
        if(input[i]>input[j])
        {
            a[z]=input[j];
            j++;
            z++;
        }
        else if(input[i]==input[j])
        {
            a[z]=input[i];
            a[z+1]=input[j];
            i++;
            j++;
            z+=2;
        }
        else{
            a[z]=input[i];
            i++;
            z++;
        }
    }
    for(int i=si;i<=ei;i++)
    {
        input[i]=a[i];
    }
    
}
void mergeSort(int input[],int size)
{
    int a[size];
    merge(input,0,size-1,a,size);
}
