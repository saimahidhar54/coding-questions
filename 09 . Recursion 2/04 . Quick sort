Quick Sort Code
Send Feedback
Sort an array A using Quick Sort.
Change in the input array itself. So no need to return or print anything.


Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)
Output format :
Array elements in increasing order (separated by space)
Constraints :
1 <= n <= 10^3
Sample Input 1 :
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8
Sample Input 2 :
5
1 2 3 5 7
Sample Output 2 :
1 2 3 5 7 

int partition(int pi,int input[],int si,int ei)
{
    int p=input[si];
    int count=0;
    for(int i=si+1;i<=ei;i++)
    {
        if(input[i]<=p)
        {
            count++;
        }
    }
        int c = si + count;
        int temp=input[si];
        input[si]=input[c];
        input[c]=temp;
    	
        int i=si,j=ei;
        while(i<=c && j >=c)
        {
            if (input[i] <= input[c])
            {
                i++;
            }
            else if (input[j] > input[c])
            {
                j--;
            }
            else 
            {
                
        temp=input[i];
        input[i]=input[j];
        input[j]=temp;
                i++;
                j--;
    	
            }
        }
             return c;
    }
    
void quick(int input[],int si,int ei)
{
    if(si>=ei)
    {
        return;
    }
    int pi;
    
    pi = partition(pi,input,si,ei);
    quick(input,si,pi-1);
    quick(input,pi+1,ei);
}
void quickSort(int input[], int size) {
    quick(input,0,size-1);
}
