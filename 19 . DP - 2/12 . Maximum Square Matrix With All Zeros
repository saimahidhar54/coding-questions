Problem statement
Given an NxM matrix that contains only 0s and 1s, find out the size of the maximum square sub-matrix with all 0s. You need to return the size of the square matrix with all 0s.

Detailed explanation ( Input/output format, Notes, Images )
 Constraints :
0 <= N <= 10^4
0 <= M <= 10^4

Time Limit: 1 sec
Sample Input 1:
3 3
1 1 0
1 1 1
1 1 1
Sample Output 1:
1
Sample Input 2:
4 4
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
Sample Output 2:
4



#include <climits>
bool fm(int **arr,int r,int c,int k,int &bv)
{
	int c1=k,c2=k,rew=c;
	while(c1!=0)
	{
		k=c2;
		c=rew;
		while(k!=0)
		{
			if(arr[r][c]==1)
			{
				bv=c;
				return false;
			}
			c++;
			k--;
		}
		r++;
		c1--;
	}
	return true;
}
int findMaxSquareWithAllZeros(int **arr, int n, int m)
{
	if(n==0 && m==0)
	{
		return 0;
	}
	int **dp=new int*[n];
	for(int i=0;i<n;i++)
	{
		dp[i]=new int[m];
	}
	//int dp[10001][10001];
	for(int i=0;i<m;i++)
	{
		if(arr[0][i]==0)
	{	dp[0][i]=1;
	}
	else
	{
		dp[0][i]=0;
	}
	}
	for(int i=0;i<n;i++)
	{		if(arr[i][0]==0)
	{	dp[i][0]=1;
	}
	else
	{
		dp[i][0]=0;
	}
	}
for(int i=1;i<n;i++)
{
	for(int j=1;j<m;j++)
	{
		if(arr[i][j]==0)
	{	dp[i][j]=1+min(dp[i-1][j],min(dp[i-1][j-1],dp[i][j-1]));
	}
	else
	{
		dp[i][j]=0;
	}
	}
}
int maxi=INT_MIN;
for(int i=0;i<n;i++)
{
	for(int j=0;j<m;j++)
	{
		if(dp[i][j]>maxi)
		{
			maxi=dp[i][j];
		}
	}
}
return maxi;


}
