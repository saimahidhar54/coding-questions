Problem statement
Given an integer h, find the possible number of balanced binary trees of height h. You just need to return the count of possible binary trees which are balanced.

This number can be huge, so, return output modulus 10^9 + 7.

Time complexity should be O(h).

Detailed explanation ( Input/output format, Notes, Images )
Constraints :
1 <= h <= 10^6
Time Limit: 1 sec
Sample Input 1:
3
Sample Output 1:
15
Sample Input 2:
4
Sample Output 2:
315


int balancedBTs(int n) {
    // Write your code here
    int a[1000000]={1,1};
    for(int i=2;i<=n;i++)
    {
        int x=(int)((((long)a[i-1])*a[i-1])%1000000007);
        int y = (int)((((long)a[i - 1]) * a[i - 2]) % 1000000007);
        a[i]=(x+((2*y)%1000000007))%1000000007;
    }
    return a[n]%1000000007;
}
