Problem statement
You are given an array of integers and a target K. You have to find the count of subsets of the given array that sum up to K.

Note:
1. Subset can have duplicate values.
2. Empty subset is a valid subset and has sum equal to zero.
Detailed explanation ( Input/output format, Notes, Images )
Constraints
1 <= T <= 50
2 <= N <= 15
0 <= array[i] <= 10^9
0 <= K <= 10^9
Time Limit: 1 second
Sample Input 1:
1
5 6
2 4 4 3 1
Sample Output 1:
3
Explanation:
Following are the three subsets, that sum upto K=6:
1. [2, 4], Element 4 in this subset is the one at index 1
2. [2, 4], Element 4 in this subset is the one at index 2
3. [2, 3, 1]  
Sample Input 2:
2
8 8
1 4 1 3 1 1 2 3 
8 2
4 1 4 4 2 4 1 1
Sample Output 2:
30
4



#include<bits/stdc++.h>
using namespace std;
int totalsubset(int arr[100],int n,int k,int sum,int &count)
{
    if(n==0)
    {
        if(sum==k)
        {
            count=count+1;
            return count;
        }
        else
        {
            return count;
        }
    }
   int a= totalsubset(arr+1,n-1,k,sum,count);
int b= totalsubset(arr+1,n-1,k,sum+arr[0],count);
return count;
}
int main(){
    int arr[100],n,t,k;
    cin >> t;
    for(int z=0;z<t;z++)
    {
        cin >> n>> k;
        for(int i=0;i<n;i++)
        {
            cin >> arr[i];
        }
        int count=0;
        int u= totalsubset(arr,n,k,0,count);
        cout << u<< endl;
    }
    // write your code here
    return 0;
}
